@page "/manageuserevents"
@using System.Text.RegularExpressions;
@using Karma.Models
@using System.Security.Claims
@inject AuthenticationStateProvider GetAuthenticationStateAsync

<style>
    .demo-mat-card {
        display: flex;
        min-width: 18rem;
        max-width: 30.5%;
        flex-grow: 1;
        flex-basis: 0;
        margin-bottom: 10px;
    }

    .demo-mat-card-content {
        padding: 1rem;
        display:inline-block;
    }

    .demo-mat-card-clean-margin {
        margin: 0px;
    }
</style>

<h1 class="mat">Karma</h1>

Ready to aquire karma points by helping out others?

@if (m_httpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
{
    <br />
    <br />
    <br />
    <MatTextField @bind-Value="@FilterValue" OnInput="@(e => FilterValue = e.Value.ToString())" Label="Search Events" Icon="search" IconTrailing="true"></MatTextField>

    <div class="card-deck">
        @foreach (var karmaEvent in GetEvents())
        {
            var regex = new Regex($"(.*){FilterValue}(.*)", RegexOptions.Compiled | RegexOptions.IgnoreCase);
            var matches = regex.Matches(karmaEvent.Name + karmaEvent.Description + karmaEvent.Id.ToString());
            @if (matches.Count > 0)
            {
                <MatCard class="demo-mat-card mx-3">
                    <div class="demo-mat-card-content">
                        <MatHeadline6 class="demo-mat-card-clean-margin" style="float:left" @onclick="()=>NavigateToIndividualEvent(karmaEvent.Id)">
                            @karmaEvent.Name
                        </MatHeadline6>
                        <MatCardActionIcons style="float:right">
                            <MatIconButton Icon="@MatIconNames.More_vert" @onclick="()=>NavigateToEditEvent(karmaEvent.Id)"></MatIconButton>
                        </MatCardActionIcons>
                    </div>
                    <MatCardContent @onclick="()=>NavigateToIndividualEvent(karmaEvent.Id)">
                        <MatCardMedia Wide="true" ImageUrl="https://material-components.github.io/material-components-web-catalog/static/media/photos/3x2/2.jpg"></MatCardMedia>
                        <MatBody2 class="demo-mat-card-content demo-mat-card-clean-margin">
                            @karmaEvent.Description
                        </MatBody2>
                    </MatCardContent>
                </MatCard>
            }
        }
    </div>
}


@code {
    private string FilterValue { get; set; } = "";
    string CurrentUserId { get; set; }

    private KarmaContext KarmaContext { get; } = new KarmaContext();

    public IEnumerable<IGenericKarmaItem> GetEvents()
    {
        return KarmaContext.Events.Where(p => p.ManagerId == CurrentUserId);
    }

    public void NavigateToIndividualEvent(Guid id)
    {
        m_uriHelper.NavigateTo($"event/{id}");
    }

    public void NavigateToEditEvent(Guid id)
    {
        m_uriHelper.NavigateTo($"editcharityevent/{id}");
    }

    protected override void OnInitialized()
    {
        var principal = m_httpContextAccessor.HttpContext.User;
        CurrentUserId = principal.FindFirstValue(ClaimTypes.NameIdentifier);
    }
}
